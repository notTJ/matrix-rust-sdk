{"name":"","littleEndian":false,"symbols":{},"typeDefs":{"RequestType":{}},"tsTypes":{"RequestType":"/**\n  * Represent the type of a request.\n  **/\nexport type RequestType = /**\n  * Represents a `KeysUploadRequest`.\n  **/\n  \"KeysUpload\"  |\n/**\n  * Represents a `KeysQueryRequest`.\n  **/\n  \"KeysQuery\"  |\n/**\n  * Represents a `KeysClaimRequest`.\n  **/\n  \"KeysClaim\"  |\n/**\n  * Represents a `ToDeviceRequest`.\n  **/\n  \"ToDevice\"  |\n/**\n  * Represents a `SignatureUploadRequest`.\n  **/\n  \"SignatureUpload\"  |\n/**\n  * Represents a `RoomMessageRequest`.\n  **/\n  \"RoomMessage\"  |\n/**\n  * Represents a `KeysBackupRequest`.\n  **/\n  \"KeysBackup\";"}}"}}ed\"  |\n/**\n  * Previous events are always accessible to newly joined members.\n  *\n  * All events in the room are accessible, even those sent when\n  * the member was not a part of the room.\n  **/\n  \"Shared\"  |\n/**\n  * All events while this is the `HistoryVisibility` value may be\n  * shared by any participating homeserver with anyone, regardless\n  * of whether they have ever joined the room.\n  **/\n  \"WorldReadable\";"}}s while this is the `HistoryVisibility` value may be\n  * shared by any participating homeserver with anyone, regardless\n  * of whether they have ever joined the room.\n  **/\n  \"WorldReadable\";","KeysQueryRequest":"/**\n  * Data for a request to the `/keys/query` API endpoint\n  * ([specification]).\n  *\n  * Returns the current devices and identity keys for the given users.\n  *\n  * [specification]: https://spec.matrix.org/unstable/client-server-api/#post_matrixclientv3keysquery\n  **/\nexport type KeysQueryRequest = {\n  /**\n  * The request ID.\n  **/\n  id: string;\n/**\n  * A JSON-encoded object of form:\n  *\n  * ```json\n  * {\"timeout\": …, \"device_keys\": …, \"token\": …}\n  * ```\n  **/\n  body: string;\n};","KeysUploadRequest":"/**\n  * Data for a request to the `/keys/upload` API endpoint\n  * ([specification]).\n  *\n  * Publishes end-to-end encryption keys for the device.\n  *\n  * [specification]: https://spec.matrix.org/unstable/client-server-api/#post_matrixclientv3keysupload\n  **/\nexport type KeysUploadRequest = {\n  /**\n  * The request ID.\n  **/\n  id: string;\n/**\n  * A JSON-encoded object of form:\n  *\n  * ```json\n  * {\"device_keys\": …, \"one_time_keys\": …}\n  * ```\n  **/\n  body: string;\n};","SimpleUserId":"/**\n  * A Matrix [user ID].\n  *\n  * [user ID]: https://spec.matrix.org/v1.2/appendices/#user-identifiers\n  **/\nexport type SimpleUserId = {\n    id: number;\n};","EncryptionAlgorithm":"/**\n  * An encryption algorithm to be used to encrypt messages sent to a\n  * room.\n  **/\nexport type EncryptionAlgorithm = /**\n  * Olm version 1 using Curve25519, AES-256, and SHA-256.\n  **/\n  \"OlmV1Curve25519AesSha2\"  |\n/**\n  * Megolm version 1 using AES-256 and SHA-256.\n  **/\n  \"MegolmV1AesSha2\";","VerificationState":"/**\n  * The verification state of the device that sent an event to us.\n  **/\nexport type VerificationState = /**\n  * The device is trusted.\n  **/\n  \"Trusted\"  |\n/**\n  * The device is not trusted.\n  **/\n  \"Untrusted\"  |\n/**\n  * The device is not known to us.\n  **/\n  \"UnknownDevice\";"}}…, \"one_time_keys\": …}\n  * ```\n  **/\n  body: string;\n};","KeysUploadRequest":"/**\n  * Data for a request to the `/keys/upload` API endpoint\n  * ([specification]).\n  *\n  * Publishes end-to-end encryption keys for the device.\n  *\n  * [specification]: https://spec.matrix.org/unstable/client-server-api/#post_matrixclientv3keysupload\n  **/\nexport type KeysUploadRequest = {\n  /**\n  * The request ID.\n  **/\n  id: string;\n/**\n  * A JSON-encoded object of form:\n  *\n  * ```json\n  * {\"device_keys\": …, \"one_time_keys\": …}\n  * ```\n  **/\n  body: string;\n};"}}